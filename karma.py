"""## Задача 2. Карма
### Что нужно сделать
Один буддист-программист решил создать свой симулятор жизни, в котором нужно набрать 500 очков кармы (это константа), чтобы достичь просветления. 

Каждый день вызывается специальная функция `one_day()`, которая возвращает количество кармы от 1 до 7 и может с вероятностью 1 к 10 выкинуть одно из исключений:

- `KillError`;
- `DrunkError`;
- `CarCrashError`;
- `GluttonyError`;
- `DepressionError`.

Напишите такую программу. Функцию оберните в бесконечный цикл, выход из которого возможен только при накоплении кармы до уровня константы. Исключения обработайте и запишите в отдельный лог `karma.log`.
### Что оценивается
- Результат вычислений корректен.
- Модели реализованы в стиле ООП, основной функционал описан в методах классов и в отдельных функциях.
- При написании классов соблюдаются основные принципы ООП: инкапсуляция, наследование и полиморфизм.
  - Для получения и установки значений у приватных атрибутов используются сеттеры и геттеры.
  - Для создания нового класса на основе уже существующего используется наследование.
- Сообщения о процессе получения результата осмыслены и понятны для пользователя.
- Переменные, функции и собственные методы классов имеют значащие имена, а не `a`, `b`, `c`, `d`.
- Классы и методы/функции имеют прописанную документацию.
- Названия используемых файлов соответствуют тем, которые написаны в задаче.

"""
import random
import exceptions


def write_log(exception, day):
    """Записывает исключение в файл"""
    with open('karma.log', 'a') as file:
        file.write(f'Day {day}: {exception};\n')


def one_day():
    """Возвращает очки кармы или исключение"""
    chance = 1 / 10
    if random.random() < chance:
        raise random.choice(exceptions.exceptions_list)
    return random.randint(1, 7)


def main_loop():
    """Основной цикл получения кармы"""
    karma = 0
    days = 1
    while karma < 500:
        try:
            get_points = one_day()
            karma += get_points
            print(f'День {days}, получено очков кармы: {get_points}, всего {karma};')
        except (exceptions.KillError,
                exceptions.DrunkError,
                exceptions.CarCrashError,
                exceptions.DepressionError,
                exceptions.GluttonyError
                ) as exc:
            write_log(exc.__class__.__name__, days)
            raise exc
        days += 1


main_loop()
