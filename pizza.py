"""## Задача 7. Пицца
### Что нужно сделать
В базе данных интернет-магазина PizzaTime хранятся данные о том, кто, что и сколько заказывал у них в определённый период. Вам нужно структурировать эту информацию, а также понять, сколько всего пицц купил каждый заказчик.

На вход в программу подаётся N заказов. Каждый заказ представляет собой строку вида «Покупатель — название пиццы — количество заказанных пицц». Реализуйте код, который выводит список покупателей и их заказов по алфавиту. Учитывайте, что один человек может заказать одно и то же несколько раз.

Пример:

```
Введите количество заказов: 6
Первый заказ: Иванов Пепперони 1
Второй заказ: Петров Де-Люкс 2
Третий заказ: Иванов Мясная 3
Четвёртый заказ: Иванов Мексиканская 2
Пятый заказ: Иванов Пепперони 2
Шестой заказ: Петров Интересная 5

Иванов: 
	Мексиканская: 2
	Мясная: 3
	Пепперони: 3
Петров:
	Де-Люкс: 2
	Интересная: 5
```
### Что оценивается
- Результат вычислений корректен.
- input содержит корректные приглашения для ввода. 
- Формат вывода соответствует примеру (перед названием пиццы пять пробелов).
- Переменные и функции имеют значащие имена, не только a, b, c, d (подробнее об этом в видео 2.3).
"""
def make_orders(ord_count, orders):
    for i_ord in range(1, ord_count + 1):
        order = input(f'{i_ord}-ый заказ: ').split()
        name, pizza, num = order[0], order[1], int(order[2])

        check = orders.setdefault(
            name, {pizza : []}
        ).setdefault(pizza, [])
        orders[name][pizza].append(num)
    print()


def dict_print(to_view):
    for name in sorted(to_view.keys()):
        print(f'{name} :')
        for i_dict in sorted(to_view[name]):
            print(f'\t{i_dict} : {sum(to_view[name][i_dict])}')



orders_history = dict()    # orders dictionary init
orders_count = int(input('Введите количество заказов: '))
make_orders(orders_count, orders_history)   # get and add order to dict
dict_print(orders_history)  # print of orders dictionary

