"""## Задача 5. Текстовый калькулятор
### Что нужно сделать
Иван стоит на пороге величайшего открытия (не будем его расстраивать), которое перевернёт представление обо всей математике и программировании. Имя этому открытию — текстовый калькулятор. Правда, код для своего открытия ему сложно написать самому, и поэтому он попросил вас помочь ему. Так что уже можно бежать в патентное бюро.

Есть файл `calc.txt`, в котором хранятся записи вида:

```
- 100 + 34,
- 23 / 4,
```

то есть ОПЕРАНД_1 ОПЕРАЦИЯ ОПЕРАНД_2, разделённые пробелами.

Операнды — целые числа. Операции — арифметические (включая деление нацело и нахождение остатка).

Напишите программу, которая вычисляет все эти операции и находит сумму их результатов. Пропишите обработку возможных ошибок. Программа не должна завершаться при первой же ошибке, она учитывает все верные строки и выводит найденный ответ.

После успешного выполнения задания, попробуйте модифицировать задачу. Теперь пользователю на экран должно выводиться сообщение с ошибочной строкой и предложением её исправить. 

**Пример 1**
```
Содержимое файла calc.txt:
100 + 34
10 +* 3
23 / 4

Содержимое консоли:
Обнаружена ошибка в строке: 10 +* 3   Хотите исправить? Да
Введите исправленную строку: 10 + 3

Сумма результатов: 152.75
```

**Пример 2**

```
Содержимое файла calc.txt:
100 + 34
10 +* 3
20 -* 2
23 / 4

Содержимое консоли:
Обнаружена ошибка в строке: 10 +* 3   Хотите исправить? Нет
Обнаружена ошибка в строке: 20 -* 2   Хотите исправить? Да
Введите исправленную строку: 20 - 2

Сумма результатов: 157.75
```

### Что оценивается
- Результат вычислений корректен.
- Формат вывода соответствует примеру.
- input содержит корректные приглашения для ввода. 
- Основной функционал описан в отдельных функциях.
- Переменные и функции имеют значащие имена, не только a, b, c, d (подробнее об этом в видео 2.3).
- Входные и выходные файлы названы так, как указано в задании.
- Сообщения об ошибках осмысленные и понятные для пользователя.


"""
def data_check(lst_data):
    oper_syms = {'+', '-', '*', '/', '**', '%'}
    if (len(lst_data) != 3) or \
            (lst_data[1] not in oper_syms) or \
            (not lst_data[0].isdigit()) or \
            (not lst_data[2].isdigit()):
        raise ValueError


def get_answer(ng_str):
    print(f'Обнаружена ошибка в строке: {ng_str}, исправить?: ', end='')
    qst = input().lower()
    pos_answ = {'+', 'yes', 'да', 'конечно'}
    if qst in pos_answ:
        answ = input('Введите исправленную строку: ')
        return answ


def my_calc():
    s_file = 'calc.txt'
    total_sum = 0
    with open(s_file, 'r') as doc:
        lst_data = doc.readlines()

    for line in lst_data:
        line = line.strip()
        try:
            cls_data = line.split()
            data_check(cls_data)
            total_sum += eval(line)
        except ValueError:
            answer = get_answer(line)
            if answer:
                lst_data.append(answer)
    return total_sum


t_num = my_calc()
print(f'\nСумма результатов: {t_num}')